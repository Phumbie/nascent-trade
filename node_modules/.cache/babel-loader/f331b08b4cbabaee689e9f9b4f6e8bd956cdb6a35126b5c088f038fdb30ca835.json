{"ast":null,"code":"var _jsxFileName = \"/Users/phumbie/Downloads/nascent-frontend-test/src/components/organisms/OrderEntry/OrderEntry.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { OrderSide, OrderType } from '../../../types';\nimport { Card } from '../../molecules/Card';\nimport { Button } from '../../atoms/Button';\nimport { Input } from '../../atoms/Input';\nimport { OrderTypeToggle } from '../../molecules/OrderTypeToggle';\nimport { SideToggle } from '../../molecules/SideToggle';\nimport { useAutoCalculation } from '../../../hooks/useAutoCalculation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderEntry = ({\n  selectedAsset,\n  prefillPrice,\n  prefillSide,\n  onSubmit,\n  submitting\n}) => {\n  _s();\n  const [orderType, setOrderType] = useState(OrderType.LIMIT);\n  const [side, setSide] = useState(OrderSide.BUY);\n  const {\n    quantity,\n    price,\n    notional,\n    setQuantity,\n    setPrice,\n    setNotional,\n    reset\n  } = useAutoCalculation();\n\n  // Handle prefills from orderbook clicks\n  useEffect(() => {\n    if (prefillPrice) {\n      setPrice(prefillPrice.toString());\n    }\n  }, [prefillPrice, setPrice]);\n  useEffect(() => {\n    if (prefillSide) {\n      setSide(prefillSide);\n    }\n  }, [prefillSide]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const orderData = {\n      asset: selectedAsset,\n      side,\n      type: orderType,\n      quantity: parseFloat(quantity),\n      ...(orderType === OrderType.LIMIT && {\n        price: parseFloat(price)\n      }),\n      notional: parseFloat(notional)\n    };\n    await onSubmit(orderData);\n    reset();\n  };\n  const isValid = () => {\n    const q = parseFloat(quantity);\n    const n = parseFloat(notional);\n    if (q <= 0 || n <= 0 || isNaN(q) || isNaN(n)) return false;\n    if (orderType === OrderType.LIMIT) {\n      const p = parseFloat(price);\n      if (p <= 0 || isNaN(p)) return false;\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Place Order\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(OrderTypeToggle, {\n        value: orderType,\n        onChange: setOrderType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideToggle, {\n        value: side,\n        onChange: setSide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [orderType === OrderType.LIMIT && /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Price\",\n          type: \"number\",\n          step: \"0.01\",\n          value: price,\n          onChange: e => setPrice(e.target.value),\n          rightAddon: \"USD\",\n          fullWidth: true,\n          placeholder: \"0.00\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Quantity\",\n          type: \"number\",\n          step: \"0.00000001\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value),\n          rightAddon: selectedAsset,\n          fullWidth: true,\n          placeholder: \"0.00000000\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Notional\",\n          type: \"number\",\n          step: \"0.01\",\n          value: notional,\n          onChange: e => setNotional(e.target.value),\n          rightAddon: \"USD\",\n          fullWidth: true,\n          placeholder: \"0.00\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: side === OrderSide.BUY ? 'success' : 'danger',\n        size: \"lg\",\n        fullWidth: true,\n        disabled: !isValid(),\n        loading: submitting,\n        children: [side === OrderSide.BUY ? 'Buy' : 'Sell', \" \", selectedAsset]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), orderType === OrderType.MARKET && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xs text-text-muted text-center\",\n        children: \"\\u26A1 Market orders execute at best available price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderEntry, \"l5x6rgsS45GkX2loJe7ctycPKaI=\", false, function () {\n  return [useAutoCalculation];\n});\n_c = OrderEntry;\nvar _c;\n$RefreshReg$(_c, \"OrderEntry\");","map":{"version":3,"names":["React","useState","useEffect","OrderSide","OrderType","Card","Button","Input","OrderTypeToggle","SideToggle","useAutoCalculation","jsxDEV","_jsxDEV","OrderEntry","selectedAsset","prefillPrice","prefillSide","onSubmit","submitting","_s","orderType","setOrderType","LIMIT","side","setSide","BUY","quantity","price","notional","setQuantity","setPrice","setNotional","reset","toString","handleSubmit","e","preventDefault","orderData","asset","type","parseFloat","isValid","q","n","isNaN","p","title","children","className","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","step","target","rightAddon","fullWidth","placeholder","required","variant","size","disabled","loading","MARKET","_c","$RefreshReg$"],"sources":["/Users/phumbie/Downloads/nascent-frontend-test/src/components/organisms/OrderEntry/OrderEntry.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Asset, OrderSide, OrderType } from '../../../types';\nimport { Card } from '../../molecules/Card';\nimport { Button } from '../../atoms/Button';\nimport { Input } from '../../atoms/Input';\nimport { OrderTypeToggle } from '../../molecules/OrderTypeToggle';\nimport { SideToggle } from '../../molecules/SideToggle';\nimport { useAutoCalculation } from '../../../hooks/useAutoCalculation';\n\ninterface OrderEntryProps {\n  selectedAsset: Asset;\n  prefillPrice?: number;\n  prefillSide?: OrderSide;\n  onSubmit: (order: any) => Promise<void>;\n  submitting: boolean;\n}\n\nexport const OrderEntry: React.FC<OrderEntryProps> = ({\n  selectedAsset,\n  prefillPrice,\n  prefillSide,\n  onSubmit,\n  submitting\n}) => {\n  const [orderType, setOrderType] = useState<OrderType>(OrderType.LIMIT);\n  const [side, setSide] = useState<OrderSide>(OrderSide.BUY);\n  const { quantity, price, notional, setQuantity, setPrice, setNotional, reset } = useAutoCalculation();\n\n  // Handle prefills from orderbook clicks\n  useEffect(() => {\n    if (prefillPrice) {\n      setPrice(prefillPrice.toString());\n    }\n  }, [prefillPrice, setPrice]);\n\n  useEffect(() => {\n    if (prefillSide) {\n      setSide(prefillSide);\n    }\n  }, [prefillSide]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const orderData = {\n      asset: selectedAsset,\n      side,\n      type: orderType,\n      quantity: parseFloat(quantity),\n      ...(orderType === OrderType.LIMIT && { price: parseFloat(price) }),\n      notional: parseFloat(notional)\n    };\n\n    await onSubmit(orderData);\n    reset();\n  };\n\n  const isValid = () => {\n    const q = parseFloat(quantity);\n    const n = parseFloat(notional);\n    \n    if (q <= 0 || n <= 0 || isNaN(q) || isNaN(n)) return false;\n    if (orderType === OrderType.LIMIT) {\n      const p = parseFloat(price);\n      if (p <= 0 || isNaN(p)) return false;\n    }\n    return true;\n  };\n\n  return (\n    <Card title=\"Place Order\">\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <OrderTypeToggle value={orderType} onChange={setOrderType} />\n\n        <SideToggle value={side} onChange={setSide} />\n\n        <div className=\"space-y-3\">\n          {orderType === OrderType.LIMIT && (\n            <Input\n              label=\"Price\"\n              type=\"number\"\n              step=\"0.01\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n              rightAddon=\"USD\"\n              fullWidth\n              placeholder=\"0.00\"\n              required\n            />\n          )}\n\n          <Input\n            label=\"Quantity\"\n            type=\"number\"\n            step=\"0.00000001\"\n            value={quantity}\n            onChange={(e) => setQuantity(e.target.value)}\n            rightAddon={selectedAsset}\n            fullWidth\n            placeholder=\"0.00000000\"\n            required\n          />\n\n          <Input\n            label=\"Notional\"\n            type=\"number\"\n            step=\"0.01\"\n            value={notional}\n            onChange={(e) => setNotional(e.target.value)}\n            rightAddon=\"USD\"\n            fullWidth\n            placeholder=\"0.00\"\n            required\n          />\n        </div>\n\n        <Button\n          type=\"submit\"\n          variant={side === OrderSide.BUY ? 'success' : 'danger'}\n          size=\"lg\"\n          fullWidth\n          disabled={!isValid()}\n          loading={submitting}\n        >\n          {side === OrderSide.BUY ? 'Buy' : 'Sell'} {selectedAsset}\n        </Button>\n\n        {orderType === OrderType.MARKET && (\n          <p className=\"text-xs text-text-muted text-center\">\n            ⚡ Market orders execute at best available price\n          </p>\n        )}\n      </form>\n    </Card>\n  );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}