{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useAutoCalculation = () => {\n  _s();\n  const [quantity, setQuantityState] = useState('');\n  const [price, setPriceState] = useState('');\n  const [notional, setNotionalState] = useState('');\n  const [lastEdited, setLastEdited] = useState('quantity');\n  useEffect(() => {\n    const q = parseFloat(quantity) || 0;\n    const p = parseFloat(price) || 0;\n    const n = parseFloat(notional) || 0;\n    if (lastEdited === 'quantity' || lastEdited === 'price') {\n      if (q > 0 && p > 0) {\n        setNotionalState((q * p).toFixed(2));\n      }\n    } else if (lastEdited === 'notional') {\n      if (n > 0 && p > 0) {\n        setQuantityState((n / p).toFixed(8));\n      }\n    }\n  }, [quantity, price, notional, lastEdited]);\n  const setQuantity = val => {\n    setQuantityState(val);\n    setLastEdited('quantity');\n  };\n  const setPrice = val => {\n    setPriceState(val);\n    setLastEdited('price');\n  };\n  const setNotional = val => {\n    setNotionalState(val);\n    setLastEdited('notional');\n  };\n  const reset = () => {\n    setQuantityState('');\n    setPriceState('');\n    setNotionalState('');\n  };\n  return {\n    quantity,\n    price,\n    notional,\n    setQuantity,\n    setPrice,\n    setNotional,\n    reset\n  };\n};\n_s(useAutoCalculation, \"Fk2dM/dDEDSh/eosqNNSn3zaHtI=\");","map":{"version":3,"names":["useState","useEffect","useAutoCalculation","_s","quantity","setQuantityState","price","setPriceState","notional","setNotionalState","lastEdited","setLastEdited","q","parseFloat","p","n","toFixed","setQuantity","val","setPrice","setNotional","reset"],"sources":["/Users/phumbie/Downloads/nascent-frontend-test/src/hooks/useAutoCalculation.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\ntype CalculationField = 'quantity' | 'price' | 'notional';\n\nexport const useAutoCalculation = () => {\n  const [quantity, setQuantityState] = useState<string>('');\n  const [price, setPriceState] = useState<string>('');\n  const [notional, setNotionalState] = useState<string>('');\n  const [lastEdited, setLastEdited] = useState<CalculationField>('quantity');\n\n  useEffect(() => {\n    const q = parseFloat(quantity) || 0;\n    const p = parseFloat(price) || 0;\n    const n = parseFloat(notional) || 0;\n\n    if (lastEdited === 'quantity' || lastEdited === 'price') {\n      if (q > 0 && p > 0) {\n        setNotionalState((q * p).toFixed(2));\n      }\n    } else if (lastEdited === 'notional') {\n      if (n > 0 && p > 0) {\n        setQuantityState((n / p).toFixed(8));\n      }\n    }\n  }, [quantity, price, notional, lastEdited]);\n\n  const setQuantity = (val: string) => {\n    setQuantityState(val);\n    setLastEdited('quantity');\n  };\n\n  const setPrice = (val: string) => {\n    setPriceState(val);\n    setLastEdited('price');\n  };\n\n  const setNotional = (val: string) => {\n    setNotionalState(val);\n    setLastEdited('notional');\n  };\n\n  const reset = () => {\n    setQuantityState('');\n    setPriceState('');\n    setNotionalState('');\n  };\n\n  return {\n    quantity,\n    price,\n    notional,\n    setQuantity,\n    setPrice,\n    setNotional,\n    reset,\n  };\n};\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAI3C,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EACzD,MAAM,CAACM,KAAK,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EACnD,MAAM,CAACQ,QAAQ,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EACzD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAmB,UAAU,CAAC;EAE1EC,SAAS,CAAC,MAAM;IACd,MAAMW,CAAC,GAAGC,UAAU,CAACT,QAAQ,CAAC,IAAI,CAAC;IACnC,MAAMU,CAAC,GAAGD,UAAU,CAACP,KAAK,CAAC,IAAI,CAAC;IAChC,MAAMS,CAAC,GAAGF,UAAU,CAACL,QAAQ,CAAC,IAAI,CAAC;IAEnC,IAAIE,UAAU,KAAK,UAAU,IAAIA,UAAU,KAAK,OAAO,EAAE;MACvD,IAAIE,CAAC,GAAG,CAAC,IAAIE,CAAC,GAAG,CAAC,EAAE;QAClBL,gBAAgB,CAAC,CAACG,CAAC,GAAGE,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;MACtC;IACF,CAAC,MAAM,IAAIN,UAAU,KAAK,UAAU,EAAE;MACpC,IAAIK,CAAC,GAAG,CAAC,IAAID,CAAC,GAAG,CAAC,EAAE;QAClBT,gBAAgB,CAAC,CAACU,CAAC,GAAGD,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC;MACtC;IACF;EACF,CAAC,EAAE,CAACZ,QAAQ,EAAEE,KAAK,EAAEE,QAAQ,EAAEE,UAAU,CAAC,CAAC;EAE3C,MAAMO,WAAW,GAAIC,GAAW,IAAK;IACnCb,gBAAgB,CAACa,GAAG,CAAC;IACrBP,aAAa,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMQ,QAAQ,GAAID,GAAW,IAAK;IAChCX,aAAa,CAACW,GAAG,CAAC;IAClBP,aAAa,CAAC,OAAO,CAAC;EACxB,CAAC;EAED,MAAMS,WAAW,GAAIF,GAAW,IAAK;IACnCT,gBAAgB,CAACS,GAAG,CAAC;IACrBP,aAAa,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMU,KAAK,GAAGA,CAAA,KAAM;IAClBhB,gBAAgB,CAAC,EAAE,CAAC;IACpBE,aAAa,CAAC,EAAE,CAAC;IACjBE,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,OAAO;IACLL,QAAQ;IACRE,KAAK;IACLE,QAAQ;IACRS,WAAW;IACXE,QAAQ;IACRC,WAAW;IACXC;EACF,CAAC;AACH,CAAC;AAAClB,EAAA,CApDWD,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}